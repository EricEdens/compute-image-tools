// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: inspect.proto

package inspect

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Distro int32

const (
	Distro_NONE     Distro = 0
	Distro_RHEL     Distro = 100
	Distro_CENTOS   Distro = 101
	Distro_AMAZON   Distro = 102
	Distro_ORACLE   Distro = 103
	Distro_FEDORA   Distro = 104
	Distro_DEBIAN   Distro = 200
	Distro_UBUNTU   Distro = 201
	Distro_KALI     Distro = 202
	Distro_OPENSUSE Distro = 300
	Distro_SLES     Distro = 301
	Distro_SLES_SAP Distro = 302
	Distro_WINDOWS  Distro = 1000
)

// Enum value maps for Distro.
var (
	Distro_name = map[int32]string{
		0:    "NONE",
		100:  "RHEL",
		101:  "CENTOS",
		102:  "AMAZON",
		103:  "ORACLE",
		104:  "FEDORA",
		200:  "DEBIAN",
		201:  "UBUNTU",
		202:  "KALI",
		300:  "OPENSUSE",
		301:  "SLES",
		302:  "SLES_SAP",
		1000: "WINDOWS",
	}
	Distro_value = map[string]int32{
		"NONE":     0,
		"RHEL":     100,
		"CENTOS":   101,
		"AMAZON":   102,
		"ORACLE":   103,
		"FEDORA":   104,
		"DEBIAN":   200,
		"UBUNTU":   201,
		"KALI":     202,
		"OPENSUSE": 300,
		"SLES":     301,
		"SLES_SAP": 302,
		"WINDOWS":  1000,
	}
)

func (x Distro) Enum() *Distro {
	p := new(Distro)
	*p = x
	return p
}

func (x Distro) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Distro) Descriptor() protoreflect.EnumDescriptor {
	return file_inspect_proto_enumTypes[0].Descriptor()
}

func (Distro) Type() protoreflect.EnumType {
	return &file_inspect_proto_enumTypes[0]
}

func (x Distro) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Distro.Descriptor instead.
func (Distro) EnumDescriptor() ([]byte, []int) {
	return file_inspect_proto_rawDescGZIP(), []int{0}
}

type Architecture int32

const (
	Architecture_UNKNOWN Architecture = 0
	Architecture_X86     Architecture = 1
	Architecture_X64     Architecture = 2
)

// Enum value maps for Architecture.
var (
	Architecture_name = map[int32]string{
		0: "UNKNOWN",
		1: "X86",
		2: "X64",
	}
	Architecture_value = map[string]int32{
		"UNKNOWN": 0,
		"X86":     1,
		"X64":     2,
	}
)

func (x Architecture) Enum() *Architecture {
	p := new(Architecture)
	*p = x
	return p
}

func (x Architecture) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Architecture) Descriptor() protoreflect.EnumDescriptor {
	return file_inspect_proto_enumTypes[1].Descriptor()
}

func (Architecture) Type() protoreflect.EnumType {
	return &file_inspect_proto_enumTypes[1]
}

func (x Architecture) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Architecture.Descriptor instead.
func (Architecture) EnumDescriptor() ([]byte, []int) {
	return file_inspect_proto_rawDescGZIP(), []int{1}
}

type InspectionResults_ErrorWhen int32

const (
	InspectionResults_NONE                               InspectionResults_ErrorWhen = 0
	InspectionResults_RUNNING_WORKER                     InspectionResults_ErrorWhen = 1
	InspectionResults_MOUNTING_GUEST                     InspectionResults_ErrorWhen = 2
	InspectionResults_INSPECTING_OS                      InspectionResults_ErrorWhen = 3
	InspectionResults_INSPECTING_BOOTLOADER              InspectionResults_ErrorWhen = 4
	InspectionResults_DECODING_WORKER_RESPONSE           InspectionResults_ErrorWhen = 5
	InspectionResults_INTERPRETING_OS_INSPECTION_RESULTS InspectionResults_ErrorWhen = 6
)

// Enum value maps for InspectionResults_ErrorWhen.
var (
	InspectionResults_ErrorWhen_name = map[int32]string{
		0: "NONE",
		1: "RUNNING_WORKER",
		2: "MOUNTING_GUEST",
		3: "INSPECTING_OS",
		4: "INSPECTING_BOOTLOADER",
		5: "DECODING_WORKER_RESPONSE",
		6: "INTERPRETING_OS_INSPECTION_RESULTS",
	}
	InspectionResults_ErrorWhen_value = map[string]int32{
		"NONE":                               0,
		"RUNNING_WORKER":                     1,
		"MOUNTING_GUEST":                     2,
		"INSPECTING_OS":                      3,
		"INSPECTING_BOOTLOADER":              4,
		"DECODING_WORKER_RESPONSE":           5,
		"INTERPRETING_OS_INSPECTION_RESULTS": 6,
	}
)

func (x InspectionResults_ErrorWhen) Enum() *InspectionResults_ErrorWhen {
	p := new(InspectionResults_ErrorWhen)
	*p = x
	return p
}

func (x InspectionResults_ErrorWhen) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InspectionResults_ErrorWhen) Descriptor() protoreflect.EnumDescriptor {
	return file_inspect_proto_enumTypes[2].Descriptor()
}

func (InspectionResults_ErrorWhen) Type() protoreflect.EnumType {
	return &file_inspect_proto_enumTypes[2]
}

func (x InspectionResults_ErrorWhen) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InspectionResults_ErrorWhen.Descriptor instead.
func (InspectionResults_ErrorWhen) EnumDescriptor() ([]byte, []int) {
	return file_inspect_proto_rawDescGZIP(), []int{1, 0}
}

type OsRelease struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// cli_formatted is a concatenation of distro, major_version, and
	// minor_version using the format expected by the `--os` flag.
	// For examples, see:
	//  https://cloud.google.com/sdk/gcloud/reference/compute/images/import#--os
	CliFormatted string `protobuf:"bytes,1,opt,name=cli_formatted,json=cliFormatted,proto3" json:"cli_formatted,omitempty"`
	// distro is the lowercase name of the distribution. Examples:
	// [centos, debian, opensuse, rhel, sles, sles-sap, ubuntu, windows]
	//
	// For programmatic usage, prefer `distro_enum`.
	Distro string `protobuf:"bytes,2,opt,name=distro,proto3" json:"distro,omitempty"`
	// major_version of the OS, as represented by the vendor.
	// Examples:
	//   - Windows 2008r2: 6
	//   - Ubuntu 18.04:  18
	//   - OpenSUSE Tumbleweed: tumbleweed
	MajorVersion string `protobuf:"bytes,3,opt,name=major_version,json=majorVersion,proto3" json:"major_version,omitempty"`
	// minor_version of the OS, as formatted by the vendor.
	// Examples:
	//   - Windows 2008r2: 1
	//   - Ubuntu 18.04:  04
	//   - OpenSUSE Tumbleweed: <empty>
	MinorVersion string `protobuf:"bytes,4,opt,name=minor_version,json=minorVersion,proto3" json:"minor_version,omitempty"`
	// The architecture the release targets.
	Architecture Architecture `protobuf:"varint,5,opt,name=architecture,proto3,enum=Architecture" json:"architecture,omitempty"`
	DistroEnum   Distro       `protobuf:"varint,6,opt,name=distro_enum,json=distroEnum,proto3,enum=Distro" json:"distro_enum,omitempty"`
}

func (x *OsRelease) Reset() {
	*x = OsRelease{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inspect_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OsRelease) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OsRelease) ProtoMessage() {}

func (x *OsRelease) ProtoReflect() protoreflect.Message {
	mi := &file_inspect_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OsRelease.ProtoReflect.Descriptor instead.
func (*OsRelease) Descriptor() ([]byte, []int) {
	return file_inspect_proto_rawDescGZIP(), []int{0}
}

func (x *OsRelease) GetCliFormatted() string {
	if x != nil {
		return x.CliFormatted
	}
	return ""
}

func (x *OsRelease) GetDistro() string {
	if x != nil {
		return x.Distro
	}
	return ""
}

func (x *OsRelease) GetMajorVersion() string {
	if x != nil {
		return x.MajorVersion
	}
	return ""
}

func (x *OsRelease) GetMinorVersion() string {
	if x != nil {
		return x.MinorVersion
	}
	return ""
}

func (x *OsRelease) GetArchitecture() Architecture {
	if x != nil {
		return x.Architecture
	}
	return Architecture_UNKNOWN
}

func (x *OsRelease) GetDistroEnum() Distro {
	if x != nil {
		return x.DistroEnum
	}
	return Distro_NONE
}

// InspectionResults contains metadata determined using automated inspection
// of the guest image.
type InspectionResults struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The OS and version detected. Populated when a single OS is
	// detected. Empty when none or multiple are found.
	OsRelease *OsRelease `protobuf:"bytes,1,opt,name=os_release,json=osRelease,proto3" json:"os_release,omitempty"`
	// bios_bootable indicates whether `os_release` is bootable using bios.
	BiosBootable bool `protobuf:"varint,2,opt,name=bios_bootable,json=biosBootable,proto3" json:"bios_bootable,omitempty"`
	// uefi_bootable indicates whether `os_release` is bootable with UEFI.
	UefiBootable bool `protobuf:"varint,3,opt,name=uefi_bootable,json=uefiBootable,proto3" json:"uefi_bootable,omitempty"`
	// root_fs indicates the file system type of the partition containing
	// the root directory ("/") of `os_release`.
	RootFs string `protobuf:"bytes,4,opt,name=root_fs,json=rootFs,proto3" json:"root_fs,omitempty"`
	// Whether the inspection process completed successfully. This is independent
	// of whether results were found. For example, inspection of an empty disk
	// will have empty results, and success will be 'true'.
	Success bool `protobuf:"varint,5,opt,name=success,proto3" json:"success,omitempty"`
	// Amount of time spent inspecting.
	ElapsedTimeMs int64 `protobuf:"varint,6,opt,name=elapsed_time_ms,json=elapsedTimeMs,proto3" json:"elapsed_time_ms,omitempty"`
	// Number of operating systems detected on the disk.
	NumOsFound int32                       `protobuf:"varint,7,opt,name=num_os_found,json=numOsFound,proto3" json:"num_os_found,omitempty"`
	ErrorWhen  InspectionResults_ErrorWhen `protobuf:"varint,8,opt,name=error_when,json=errorWhen,proto3,enum=InspectionResults_ErrorWhen" json:"error_when,omitempty"`
}

func (x *InspectionResults) Reset() {
	*x = InspectionResults{}
	if protoimpl.UnsafeEnabled {
		mi := &file_inspect_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InspectionResults) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InspectionResults) ProtoMessage() {}

func (x *InspectionResults) ProtoReflect() protoreflect.Message {
	mi := &file_inspect_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InspectionResults.ProtoReflect.Descriptor instead.
func (*InspectionResults) Descriptor() ([]byte, []int) {
	return file_inspect_proto_rawDescGZIP(), []int{1}
}

func (x *InspectionResults) GetOsRelease() *OsRelease {
	if x != nil {
		return x.OsRelease
	}
	return nil
}

func (x *InspectionResults) GetBiosBootable() bool {
	if x != nil {
		return x.BiosBootable
	}
	return false
}

func (x *InspectionResults) GetUefiBootable() bool {
	if x != nil {
		return x.UefiBootable
	}
	return false
}

func (x *InspectionResults) GetRootFs() string {
	if x != nil {
		return x.RootFs
	}
	return ""
}

func (x *InspectionResults) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *InspectionResults) GetElapsedTimeMs() int64 {
	if x != nil {
		return x.ElapsedTimeMs
	}
	return 0
}

func (x *InspectionResults) GetNumOsFound() int32 {
	if x != nil {
		return x.NumOsFound
	}
	return 0
}

func (x *InspectionResults) GetErrorWhen() InspectionResults_ErrorWhen {
	if x != nil {
		return x.ErrorWhen
	}
	return InspectionResults_NONE
}

var File_inspect_proto protoreflect.FileDescriptor

var file_inspect_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xef, 0x01, 0x0a, 0x09, 0x4f, 0x73, 0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x6c, 0x69, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x69, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74,
	0x65, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x12, 0x23, 0x0a, 0x0d, 0x6d, 0x61,
	0x6a, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x23, 0x0a, 0x0d, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x56, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x31, 0x0a, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x41, 0x72, 0x63,
	0x68, 0x69, 0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0c, 0x61, 0x72, 0x63, 0x68, 0x69,
	0x74, 0x65, 0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x28, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x74, 0x72,
	0x6f, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x07, 0x2e, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x6f, 0x52, 0x0a, 0x64, 0x69, 0x73, 0x74, 0x72, 0x6f, 0x45, 0x6e, 0x75,
	0x6d, 0x22, 0xf6, 0x03, 0x0a, 0x11, 0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x0a, 0x6f, 0x73, 0x5f, 0x72, 0x65,
	0x6c, 0x65, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x4f, 0x73,
	0x52, 0x65, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x52, 0x09, 0x6f, 0x73, 0x52, 0x65, 0x6c, 0x65, 0x61,
	0x73, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x69, 0x6f, 0x73, 0x5f, 0x62, 0x6f, 0x6f, 0x74, 0x61,
	0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x62, 0x69, 0x6f, 0x73, 0x42,
	0x6f, 0x6f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x75, 0x65, 0x66, 0x69, 0x5f,
	0x62, 0x6f, 0x6f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x75, 0x65, 0x66, 0x69, 0x42, 0x6f, 0x6f, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x17, 0x0a, 0x07,
	0x72, 0x6f, 0x6f, 0x74, 0x5f, 0x66, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x6f, 0x6f, 0x74, 0x46, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x65, 0x6c, 0x61, 0x70, 0x73, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x6e, 0x75, 0x6d, 0x5f, 0x6f,
	0x73, 0x5f, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e,
	0x75, 0x6d, 0x4f, 0x73, 0x46, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x3b, 0x0a, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x77, 0x68, 0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e,
	0x49, 0x6e, 0x73, 0x70, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x73, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x57, 0x68, 0x65, 0x6e, 0x52, 0x09, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x57, 0x68, 0x65, 0x6e, 0x22, 0xb1, 0x01, 0x0a, 0x09, 0x45, 0x72, 0x72, 0x6f, 0x72,
	0x57, 0x68, 0x65, 0x6e, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x12,
	0x0a, 0x0e, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x45, 0x52,
	0x10, 0x01, 0x12, 0x12, 0x0a, 0x0e, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x47,
	0x55, 0x45, 0x53, 0x54, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x53, 0x50, 0x45, 0x43,
	0x54, 0x49, 0x4e, 0x47, 0x5f, 0x4f, 0x53, 0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x53,
	0x50, 0x45, 0x43, 0x54, 0x49, 0x4e, 0x47, 0x5f, 0x42, 0x4f, 0x4f, 0x54, 0x4c, 0x4f, 0x41, 0x44,
	0x45, 0x52, 0x10, 0x04, 0x12, 0x1c, 0x0a, 0x18, 0x44, 0x45, 0x43, 0x4f, 0x44, 0x49, 0x4e, 0x47,
	0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x53, 0x50, 0x4f, 0x4e, 0x53, 0x45,
	0x10, 0x05, 0x12, 0x26, 0x0a, 0x22, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x50, 0x52, 0x45, 0x54, 0x49,
	0x4e, 0x47, 0x5f, 0x4f, 0x53, 0x5f, 0x49, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x52, 0x45, 0x53, 0x55, 0x4c, 0x54, 0x53, 0x10, 0x06, 0x2a, 0xa8, 0x01, 0x0a, 0x06, 0x44,
	0x69, 0x73, 0x74, 0x72, 0x6f, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12,
	0x08, 0x0a, 0x04, 0x52, 0x48, 0x45, 0x4c, 0x10, 0x64, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x45, 0x4e,
	0x54, 0x4f, 0x53, 0x10, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x4d, 0x41, 0x5a, 0x4f, 0x4e, 0x10,
	0x66, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x52, 0x41, 0x43, 0x4c, 0x45, 0x10, 0x67, 0x12, 0x0a, 0x0a,
	0x06, 0x46, 0x45, 0x44, 0x4f, 0x52, 0x41, 0x10, 0x68, 0x12, 0x0b, 0x0a, 0x06, 0x44, 0x45, 0x42,
	0x49, 0x41, 0x4e, 0x10, 0xc8, 0x01, 0x12, 0x0b, 0x0a, 0x06, 0x55, 0x42, 0x55, 0x4e, 0x54, 0x55,
	0x10, 0xc9, 0x01, 0x12, 0x09, 0x0a, 0x04, 0x4b, 0x41, 0x4c, 0x49, 0x10, 0xca, 0x01, 0x12, 0x0d,
	0x0a, 0x08, 0x4f, 0x50, 0x45, 0x4e, 0x53, 0x55, 0x53, 0x45, 0x10, 0xac, 0x02, 0x12, 0x09, 0x0a,
	0x04, 0x53, 0x4c, 0x45, 0x53, 0x10, 0xad, 0x02, 0x12, 0x0d, 0x0a, 0x08, 0x53, 0x4c, 0x45, 0x53,
	0x5f, 0x53, 0x41, 0x50, 0x10, 0xae, 0x02, 0x12, 0x0c, 0x0a, 0x07, 0x57, 0x49, 0x4e, 0x44, 0x4f,
	0x57, 0x53, 0x10, 0xe8, 0x07, 0x2a, 0x2d, 0x0a, 0x0c, 0x41, 0x72, 0x63, 0x68, 0x69, 0x74, 0x65,
	0x63, 0x74, 0x75, 0x72, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x58, 0x38, 0x36, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x58,
	0x36, 0x34, 0x10, 0x02, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x3b, 0x69, 0x6e, 0x73, 0x70, 0x65, 0x63,
	0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_inspect_proto_rawDescOnce sync.Once
	file_inspect_proto_rawDescData = file_inspect_proto_rawDesc
)

func file_inspect_proto_rawDescGZIP() []byte {
	file_inspect_proto_rawDescOnce.Do(func() {
		file_inspect_proto_rawDescData = protoimpl.X.CompressGZIP(file_inspect_proto_rawDescData)
	})
	return file_inspect_proto_rawDescData
}

var file_inspect_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_inspect_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_inspect_proto_goTypes = []interface{}{
	(Distro)(0),                      // 0: Distro
	(Architecture)(0),                // 1: Architecture
	(InspectionResults_ErrorWhen)(0), // 2: InspectionResults.ErrorWhen
	(*OsRelease)(nil),                // 3: OsRelease
	(*InspectionResults)(nil),        // 4: InspectionResults
}
var file_inspect_proto_depIdxs = []int32{
	1, // 0: OsRelease.architecture:type_name -> Architecture
	0, // 1: OsRelease.distro_enum:type_name -> Distro
	3, // 2: InspectionResults.os_release:type_name -> OsRelease
	2, // 3: InspectionResults.error_when:type_name -> InspectionResults.ErrorWhen
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_inspect_proto_init() }
func file_inspect_proto_init() {
	if File_inspect_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_inspect_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OsRelease); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_inspect_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InspectionResults); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_inspect_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_inspect_proto_goTypes,
		DependencyIndexes: file_inspect_proto_depIdxs,
		EnumInfos:         file_inspect_proto_enumTypes,
		MessageInfos:      file_inspect_proto_msgTypes,
	}.Build()
	File_inspect_proto = out.File
	file_inspect_proto_rawDesc = nil
	file_inspect_proto_goTypes = nil
	file_inspect_proto_depIdxs = nil
}
