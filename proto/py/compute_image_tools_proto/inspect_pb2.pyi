# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

DistroValue = typing___NewType('DistroValue', builtin___int)
type___DistroValue = DistroValue
Distro: _Distro
class _Distro(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[DistroValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    DISTRO_UNKNOWN = typing___cast(DistroValue, 0)
    WINDOWS = typing___cast(DistroValue, 1000)
    DEBIAN = typing___cast(DistroValue, 2000)
    UBUNTU = typing___cast(DistroValue, 2001)
    KALI = typing___cast(DistroValue, 2002)
    OPENSUSE = typing___cast(DistroValue, 3000)
    SLES = typing___cast(DistroValue, 3001)
    SLES_SAP = typing___cast(DistroValue, 3002)
    FEDORA = typing___cast(DistroValue, 4000)
    RHEL = typing___cast(DistroValue, 4001)
    CENTOS = typing___cast(DistroValue, 4002)
    AMAZON = typing___cast(DistroValue, 4003)
    ORACLE = typing___cast(DistroValue, 4004)
DISTRO_UNKNOWN = typing___cast(DistroValue, 0)
WINDOWS = typing___cast(DistroValue, 1000)
DEBIAN = typing___cast(DistroValue, 2000)
UBUNTU = typing___cast(DistroValue, 2001)
KALI = typing___cast(DistroValue, 2002)
OPENSUSE = typing___cast(DistroValue, 3000)
SLES = typing___cast(DistroValue, 3001)
SLES_SAP = typing___cast(DistroValue, 3002)
FEDORA = typing___cast(DistroValue, 4000)
RHEL = typing___cast(DistroValue, 4001)
CENTOS = typing___cast(DistroValue, 4002)
AMAZON = typing___cast(DistroValue, 4003)
ORACLE = typing___cast(DistroValue, 4004)
type___Distro = Distro

ArchitectureValue = typing___NewType('ArchitectureValue', builtin___int)
type___ArchitectureValue = ArchitectureValue
Architecture: _Architecture
class _Architecture(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[ArchitectureValue]):
    DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
    ARCHITECTURE_UNKNOWN = typing___cast(ArchitectureValue, 0)
    X86 = typing___cast(ArchitectureValue, 1)
    X64 = typing___cast(ArchitectureValue, 2)
ARCHITECTURE_UNKNOWN = typing___cast(ArchitectureValue, 0)
X86 = typing___cast(ArchitectureValue, 1)
X64 = typing___cast(ArchitectureValue, 2)
type___Architecture = Architecture

class OsRelease(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    cli_formatted: typing___Text = ...
    distro: typing___Text = ...
    major_version: typing___Text = ...
    minor_version: typing___Text = ...
    architecture: type___ArchitectureValue = ...
    distro_id: type___DistroValue = ...

    def __init__(self,
        *,
        cli_formatted : typing___Optional[typing___Text] = None,
        distro : typing___Optional[typing___Text] = None,
        major_version : typing___Optional[typing___Text] = None,
        minor_version : typing___Optional[typing___Text] = None,
        architecture : typing___Optional[type___ArchitectureValue] = None,
        distro_id : typing___Optional[type___DistroValue] = None,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"architecture",b"architecture",u"cli_formatted",b"cli_formatted",u"distro",b"distro",u"distro_id",b"distro_id",u"major_version",b"major_version",u"minor_version",b"minor_version"]) -> None: ...
type___OsRelease = OsRelease

class InspectionResults(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    ErrorWhenValue = typing___NewType('ErrorWhenValue', builtin___int)
    type___ErrorWhenValue = ErrorWhenValue
    ErrorWhen: _ErrorWhen
    class _ErrorWhen(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[InspectionResults.ErrorWhenValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        NO_ERROR = typing___cast(InspectionResults.ErrorWhenValue, 0)
        STARTING_WORKER = typing___cast(InspectionResults.ErrorWhenValue, 100)
        RUNNING_WORKER = typing___cast(InspectionResults.ErrorWhenValue, 101)
        MOUNTING_GUEST = typing___cast(InspectionResults.ErrorWhenValue, 200)
        INSPECTING_OS = typing___cast(InspectionResults.ErrorWhenValue, 201)
        INSPECTING_BOOTLOADER = typing___cast(InspectionResults.ErrorWhenValue, 202)
        DECODING_WORKER_RESPONSE = typing___cast(InspectionResults.ErrorWhenValue, 300)
        INTERPRETING_INSPECTION_RESULTS = typing___cast(InspectionResults.ErrorWhenValue, 301)
    NO_ERROR = typing___cast(InspectionResults.ErrorWhenValue, 0)
    STARTING_WORKER = typing___cast(InspectionResults.ErrorWhenValue, 100)
    RUNNING_WORKER = typing___cast(InspectionResults.ErrorWhenValue, 101)
    MOUNTING_GUEST = typing___cast(InspectionResults.ErrorWhenValue, 200)
    INSPECTING_OS = typing___cast(InspectionResults.ErrorWhenValue, 201)
    INSPECTING_BOOTLOADER = typing___cast(InspectionResults.ErrorWhenValue, 202)
    DECODING_WORKER_RESPONSE = typing___cast(InspectionResults.ErrorWhenValue, 300)
    INTERPRETING_INSPECTION_RESULTS = typing___cast(InspectionResults.ErrorWhenValue, 301)
    type___ErrorWhen = ErrorWhen

    bios_bootable: builtin___bool = ...
    uefi_bootable: builtin___bool = ...
    root_fs: typing___Text = ...
    error_when: type___InspectionResults.ErrorWhenValue = ...
    elapsed_time_ms: builtin___int = ...
    os_count: builtin___int = ...

    @property
    def os_release(self) -> type___OsRelease: ...

    def __init__(self,
        *,
        os_release : typing___Optional[type___OsRelease] = None,
        bios_bootable : typing___Optional[builtin___bool] = None,
        uefi_bootable : typing___Optional[builtin___bool] = None,
        root_fs : typing___Optional[typing___Text] = None,
        error_when : typing___Optional[type___InspectionResults.ErrorWhenValue] = None,
        elapsed_time_ms : typing___Optional[builtin___int] = None,
        os_count : typing___Optional[builtin___int] = None,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions___Literal[u"os_release",b"os_release"]) -> builtin___bool: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"bios_bootable",b"bios_bootable",u"elapsed_time_ms",b"elapsed_time_ms",u"error_when",b"error_when",u"os_count",b"os_count",u"os_release",b"os_release",u"root_fs",b"root_fs",u"uefi_bootable",b"uefi_bootable"]) -> None: ...
type___InspectionResults = InspectionResults
